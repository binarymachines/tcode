# 
# sample YAML init file for 'snap' HTTP microservice framework
#
#
globals:
    transform_function_module:   tx_transforms
    service_module:              tx_service_objects
    port:                        5000
    debug:                       True
    logfile:                     tictail.log
    project_directory:           $TX_HOME


nginx_servers:
        local_dev:
                hostname:       localhost
                port:           8080
                uwsgi_sock:     /tmp/uwsgi.sock


uwsgi_environments:
# you can create an arbitrary number of environments here and generate init files for them by name
# using the uwsgi initfile generator script
        dev:
                base_directory:         ~/workshop/python/project_snap

                # python_home should be the parent of your python bin and lib dirs. 
                # If you are using virtualenv, it should be your active venv directory
                python_home:            ~/.virtualenvs/snap            

                socket_directory:       /tmp

                # this is separate from the application and webserver logs
                log_directory:          /var/log/uwsgi
        prod:
                base_directory:         $SNAP_BASE
                python_home:            $SNAP_PYTHON_HOME
                socket_directory:       $SNAP_SOCKET
                log_directory:          $SNAP_LOG

                                

service_objects:

        delivery_client:
            class:
                DeliveryAPIClient
            init_params:
                - name: client_id
                  value: ZTM0ZmNjOWRhNGMyNzkyYmI5NWVhMmM1ZmU2Njg3M2E3

        couchbase:
            class:
                CouchbaseServiceObject
            init_params:
                - name: hostname
                  value: localhost

                - name: bucket_name
                  value: tictail

data_shapes:
        default:               
                fields:
                        - name: team_id
                          type: string
                          required: True               
                          
                        - name: team_admin_id
                          type: string
                          required: True
                                        
                        
                             
transforms:
        default:
            route:              /
            method:             GET
            input_shape:        default
            output_mimetype:    application/json
                

        dummy_transform:
            route:              /route
            method:             POST
            input_shape:        shape_name
            output_mimetype:    application/json


             
#---------------------------------------------------
#
# This section contains optional config structures
# for Serpentine application components.
#
#---------------------------------------------------


datasources:
        schedules:
            type:           menu   
            table:          schedules
            name_field:     name            # default
            value_field:    id              # default
            
        schedule_index:
            type:           table
            table:          schedules
            class:          ScheduleIndexDataSource
            fields:         id, name, begin_date, end_date, date_created, export_date, is_active